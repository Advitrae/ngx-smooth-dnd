{
  "version": 3,
  "file": "ngx-smooth-dnd.umd.min.js",
  "sources": [
    "ng://ngx-smooth-dnd/out/src/draggable/draggable.component.ts",
    "ng://ngx-smooth-dnd/out/src/container/container.component.ts",
    "ng://ngx-smooth-dnd/out/src/ngx-smooth-dnd.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, OnChanges, SimpleChanges, Output } from '@angular/core';\r\nimport { constants } from 'smooth-dnd';\r\nconst {\r\n  wrapperClass,\r\n  animationClass\r\n} = constants;\r\n\r\nconst constantClasses = {\r\n  [wrapperClass]: true,\r\n  [animationClass]: true,\r\n};\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'draggable',\r\n  template: `<div [ngClass]=\"classList\">\r\n  <ng-content></ng-content>\r\n</div>\r\n\r\n`,\r\n})\r\nexport class DraggableComponent {\r\n  classList = Object.assign({}, constantClasses);\r\n}\r\n",
    "import { Component, ContentChildren, QueryList, AfterContentInit, ViewChild, ElementRef, AfterViewInit, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { DraggableComponent } from '../draggable/draggable.component';\r\nimport SmoothDnD, { constants } from 'smooth-dnd';\r\n\r\n// tslint:disable:no-output-on-prefix\r\n\r\nexport interface IDropParams {\r\n  removedIndex: number,\r\n  addedIndex: number,\r\n  payload: any,\r\n  element: Element,\r\n}\r\n\r\nexport type IPayload = any;\r\n\r\nexport interface IContainerOptions {\r\n  orientation?: string;\r\n  behaviour?: string;\r\n  groupName?: string;\r\n  lockAxis?: string;\r\n  dragHandleSelector?: string;\r\n  nonDragAreaSelector?: string;\r\n  dragBeginDelay?: number;\r\n  animationDuration?: number;\r\n  autoScrollEnabled?: boolean;\r\n  dragClass?: string;\r\n  dropClass?: string;\r\n  onDragStart?: (index: number, payload: IPayload) => void;\r\n  onDrop?: (removedIndex: number, addedIndex: number, payload: any, element: Element) => void;\r\n  getChildPayload?: (index: number) => {};\r\n  shouldAnimateDrop?: (sourceContainerOptions: IContainerOptions, payload: IPayload) => boolean;\r\n  shouldAcceptDrop?: (sourceContainerOptions: IContainerOptions, payload: IPayload) => boolean;\r\n  onDragEnter?: () => void;\r\n  onDragLeave?: () => void;\r\n}\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'container',\r\n  template: `<div #container [ngClass]=\"classList\">\r\n  <ng-content></ng-content>\r\n</div>`\r\n})\r\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\r\n  private container: any;\r\n  @ContentChildren(DraggableComponent) draggables: QueryList<DraggableComponent>;\r\n  @ViewChild('container') containerElementRef: ElementRef;\r\n\r\n  @Input('orientation') orientation;\r\n  @Input('behaviour') behaviour;\r\n  @Input('groupName') groupName;\r\n  @Input('lockAxis') lockAxis;\r\n  @Input('dragHandleSelector') dragHandleSelector;\r\n  @Input('nonDragAreaSelector') nonDragAreaSelector;\r\n  @Input('dragBeginDelay') dragBeginDelay;\r\n  @Input('animationDuration') animationDuration;\r\n  @Input('autoScrollEnabled') autoScrollEnabled;\r\n  @Input('dragClass') dragClass;\r\n  @Input('dropClass') dropClass;\r\n\r\n  @Output() dragStart = new EventEmitter<{ index: number; payload: IPayload}>();\r\n  @Output() drop = new EventEmitter<IDropParams>();\r\n  @Input() getChildPayload: (index: number) => {};\r\n  @Input() shouldAnimateDrop: (sourceContainerOptions: IContainerOptions, payload: IPayload) => boolean;\r\n  @Input() shouldAcceptDrop: (sourceContainerOptions: IContainerOptions, payload: IPayload) => boolean;\r\n  @Output() dragEnter = new EventEmitter();\r\n  @Output() dragLeave = new EventEmitter();\r\n\r\n  ngAfterViewInit() {\r\n    this.container = SmoothDnD(this.containerElementRef.nativeElement, this.getOptions());\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.container.dispose();\r\n  }\r\n\r\n  private getOptions(): IContainerOptions {    \r\n    const options: IContainerOptions = {};\r\n    if (this.orientation) options.orientation = this.orientation;\r\n    if (this.behaviour) options.behaviour = this.behaviour;\r\n    if (this.groupName) options.groupName = this.groupName;\r\n    if (this.lockAxis) options.lockAxis = this.lockAxis;\r\n    if (this.dragHandleSelector) options.dragHandleSelector = this.dragHandleSelector;\r\n    if (this.nonDragAreaSelector) options.nonDragAreaSelector = this.nonDragAreaSelector;\r\n    if (this.dragBeginDelay) options.dragBeginDelay = this.dragBeginDelay;\r\n    if (this.animationDuration) options.animationDuration = this.animationDuration;\r\n    if (this.autoScrollEnabled) options.autoScrollEnabled = this.autoScrollEnabled;\r\n    if (this.dragClass) options.dragClass = this.dragClass;\r\n    if (this.dropClass) options.dropClass = this.dropClass;\r\n    \r\n    if (this.dragStart) options.onDragStart = (index: number, payload: IPayload) => {\r\n      this.dragStart.emit({ index, payload });\r\n    };\r\n\r\n    if (this.drop) options.onDrop = (removedIndex: number, addedIndex: number, payload: any, element: Element) => {\r\n      this.drop.emit({ removedIndex, addedIndex, payload, element });\r\n    };\r\n\r\n    if (this.getChildPayload) options.getChildPayload = this.getChildPayload;\r\n    if (this.shouldAnimateDrop) options.shouldAnimateDrop = this.shouldAnimateDrop;\r\n    if (this.shouldAcceptDrop) options.shouldAcceptDrop = this.shouldAcceptDrop;\r\n\r\n    if (this.drop) options.onDrop = (removedIndex: number, addedIndex: number, payload: any, element: Element) => {\r\n      this.drop.emit({ removedIndex, addedIndex, payload, element });\r\n    };\r\n\r\n    if (this.dragEnter) options.onDragEnter = () => this.dragEnter.emit();\r\n    if (this.dragLeave) options.onDragLeave = () => this.dragLeave.emit();\r\n\r\n    return options;\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { DraggableComponent } from './draggable/draggable.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ContainerComponent, DraggableComponent],\r\n  exports: [ContainerComponent, DraggableComponent]\r\n})\r\nexport class NgxSmoothDnDModule {}\r\n"
  ],
  "names": [
    "wrapperClass",
    "constants",
    "animationClass",
    "constantClasses",
    "_a",
    "DraggableComponent",
    "this",
    "classList",
    "Object",
    "assign",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "ContainerComponent",
    "dragStart",
    "EventEmitter",
    "drop",
    "dragEnter",
    "dragLeave",
    "prototype",
    "ngAfterViewInit",
    "container",
    "SmoothDnD",
    "containerElementRef",
    "nativeElement",
    "getOptions",
    "ngOnDestroy",
    "dispose",
    "_this",
    "options",
    "orientation",
    "behaviour",
    "groupName",
    "lockAxis",
    "dragHandleSelector",
    "nonDragAreaSelector",
    "dragBeginDelay",
    "animationDuration",
    "autoScrollEnabled",
    "dragClass",
    "dropClass",
    "onDragStart",
    "index",
    "payload",
    "emit",
    "onDrop",
    "removedIndex",
    "addedIndex",
    "element",
    "getChildPayload",
    "shouldAnimateDrop",
    "shouldAcceptDrop",
    "onDragEnter",
    "onDragLeave",
    "draggables",
    "ContentChildren",
    "ViewChild",
    "Input",
    "Output",
    "NgxSmoothDnDModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "yZAGEA,EAAFC,EAAAA,UAAAD,aACEE,EAAFD,EAAAA,UAAAC,eAGMC,IAANC,EAAA,IACGJ,IAAe,EAChBI,EAACF,IAAiB,EAFpBE,GAcAC,aACAC,KAAAC,UAAcC,OAAOC,OAAO,GAAIN,kBAVhC,CAAAO,KAACC,EAAAA,UAADC,KAAA,CAAW,CAETC,SAAU,YACVC,SAAU,+GC4BZ,IAAAC,EAAA,wBAiBAT,KAAAU,UAAwB,IAAIC,EAAAA,aAC5BX,KAAAY,KAAmB,IAAID,EAAAA,aAIvBX,KAAAa,UAAwB,IAAIF,EAAAA,aAC5BX,KAAAc,UAAwB,IAAIH,EAAAA,oBAE1BF,EAAFM,UAAAC,gBAAE,WACEhB,KAAKiB,UAAYC,EAAUlB,KAAKmB,oBAAoBC,cAAepB,KAAKqB,eAE1EZ,EAAFM,UAAAO,YAAE,WACEtB,KAAKiB,UAAUM,WAGTd,EAAVM,UAAAM,WAAU,WAAA,IAAVG,EAAAxB,KACUyB,EAA6B,GAgCnC,OA/BIzB,KAAK0B,cAAaD,EAAQC,YAAc1B,KAAK0B,aAC7C1B,KAAK2B,YAAWF,EAAQE,UAAY3B,KAAK2B,WACzC3B,KAAK4B,YAAWH,EAAQG,UAAY5B,KAAK4B,WACzC5B,KAAK6B,WAAUJ,EAAQI,SAAW7B,KAAK6B,UACvC7B,KAAK8B,qBAAoBL,EAAQK,mBAAqB9B,KAAK8B,oBAC3D9B,KAAK+B,sBAAqBN,EAAQM,oBAAsB/B,KAAK+B,qBAC7D/B,KAAKgC,iBAAgBP,EAAQO,eAAiBhC,KAAKgC,gBACnDhC,KAAKiC,oBAAmBR,EAAQQ,kBAAoBjC,KAAKiC,mBACzDjC,KAAKkC,oBAAmBT,EAAQS,kBAAoBlC,KAAKkC,mBACzDlC,KAAKmC,YAAWV,EAAQU,UAAYnC,KAAKmC,WACzCnC,KAAKoC,YAAWX,EAAQW,UAAYpC,KAAKoC,WAEzCpC,KAAKU,YAAWe,EAAQY,YAAc,SAACC,EAAeC,GACxDf,EAAKd,UAAU8B,KAAK,CAAEF,MAA5BA,EAAmCC,QAAnCA,MAGQvC,KAAKY,OAAMa,EAAQgB,OAAS,SAACC,EAAsBC,EAAoBJ,EAAcK,GACvFpB,EAAKZ,KAAK4B,KAAK,CAAEE,aAAvBA,EAAqCC,WAArCA,EAAiDJ,QAAjDA,EAA0DK,QAA1DA,MAGQ5C,KAAK6C,kBAAiBpB,EAAQoB,gBAAkB7C,KAAK6C,iBACrD7C,KAAK8C,oBAAmBrB,EAAQqB,kBAAoB9C,KAAK8C,mBACzD9C,KAAK+C,mBAAkBtB,EAAQsB,iBAAmB/C,KAAK+C,kBAEvD/C,KAAKY,OAAMa,EAAQgB,OAAS,SAACC,EAAsBC,EAAoBJ,EAAcK,GACvFpB,EAAKZ,KAAK4B,KAAK,CAAEE,aAAvBA,EAAqCC,WAArCA,EAAiDJ,QAAjDA,EAA0DK,QAA1DA,MAGQ5C,KAAKa,YAAWY,EAAQuB,YAAc,WAAM,OAAAxB,EAAKX,UAAU2B,SAC3DxC,KAAKc,YAAWW,EAAQwB,YAAc,WAAM,OAAAzB,EAAKV,UAAU0B,SAExDf,KAjEX,iBAPA,CAAArB,KAACC,EAAAA,UAADC,KAAA,CAAW,CAETC,SAAU,YACVC,SAAU,0IAMZ0C,WAAA,CAAA,CAAA9C,KAAG+C,EAAAA,gBAAH7C,KAAA,CAAmBP,KACnBoB,oBAAA,CAAA,CAAAf,KAAGgD,EAAAA,UAAH9C,KAAA,CAAa,eAEboB,YAAA,CAAA,CAAAtB,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,iBACTqB,UAAA,CAAA,CAAAvB,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,eACTsB,UAAA,CAAA,CAAAxB,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,eACTuB,SAAA,CAAA,CAAAzB,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,cACTwB,mBAAA,CAAA,CAAA1B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,wBACTyB,oBAAA,CAAA,CAAA3B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,yBACT0B,eAAA,CAAA,CAAA5B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,oBACT2B,kBAAA,CAAA,CAAA7B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,uBACT4B,kBAAA,CAAA,CAAA9B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,uBACT6B,UAAA,CAAA,CAAA/B,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,eACT8B,UAAA,CAAA,CAAAhC,KAAGiD,EAAAA,MAAH/C,KAAA,CAAS,eAETI,UAAA,CAAA,CAAAN,KAAGkD,EAAAA,SACH1C,KAAA,CAAA,CAAAR,KAAGkD,EAAAA,SACHT,gBAAA,CAAA,CAAAzC,KAAGiD,EAAAA,QACHP,kBAAA,CAAA,CAAA1C,KAAGiD,EAAAA,QACHN,iBAAA,CAAA,CAAA3C,KAAGiD,EAAAA,QACHxC,UAAA,CAAA,CAAAT,KAAGkD,EAAAA,SACHxC,UAAA,CAAA,CAAAV,KAAGkD,EAAAA,UClEH,MAAAC,EAAA,2BAKA,CAAAnD,KAACoD,EAAAA,SAADlD,KAAA,CAAU,CACRmD,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAClD,EAAoBV,GACnC6D,QAAS,CAACnD,EAAoBV"
}

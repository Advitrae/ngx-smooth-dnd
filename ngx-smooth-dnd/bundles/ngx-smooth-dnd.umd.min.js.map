{
  "version": 3,
  "file": "ngx-smooth-dnd.umd.min.js",
  "sources": [
    "ng://ngx-smooth-dnd/out/src/draggable/draggable.component.ts",
    "ng://ngx-smooth-dnd/out/src/container/container.component.ts",
    "ng://ngx-smooth-dnd/out/src/ngx-smooth-dnd.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, OnChanges, SimpleChanges, Output } from '@angular/core';\r\nimport { constants } from 'smooth-dnd';\r\nconst {\r\n  wrapperClass,\r\n  animationClass\r\n} = constants;\r\n\r\nconst constantClasses = {\r\n  [wrapperClass]: true,\r\n  [animationClass]: true,\r\n};\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ngx-smooth-dnd-draggable',\r\n  template: `<div [ngClass]=\"classList\">\r\n  <ng-content></ng-content>\r\n</div>\r\n\r\n`,\r\n})\r\nexport class DraggableComponent {\r\n  classList = Object.assign({}, constantClasses);\r\n}\r\n",
    "import { Component, ContentChildren, QueryList, AfterContentInit, ViewChild, ElementRef, AfterViewInit, Input, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { DraggableComponent } from '../draggable/draggable.component';\r\nimport SmoothDnD, { constants } from 'smooth-dnd';\r\n\r\n// tslint:disable:no-output-on-prefix\r\n\r\nexport interface IDropResult {\r\n  removedIndex: number,\r\n  addedIndex: number,\r\n  payload: any,\r\n  element: Element,\r\n}\r\n\r\nexport interface IContainerOptions {\r\n  orientation?: string;\r\n  onDrop?: (removedIndex: number, addedIndex: number, payload: any, element: Element) => void\r\n}\r\n\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ngx-smooth-dnd-container',\r\n  template: `<div #container [ngClass]=\"classList\">\r\n  <ng-content></ng-content>\r\n</div>`\r\n})\r\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\r\n  private container: any;\r\n  @ContentChildren(DraggableComponent) draggables: QueryList<DraggableComponent>;\r\n  @ViewChild('container') containerElementRef: ElementRef;\r\n\r\n  @Input('orientation') orientation;\r\n  @Output() onDrop = new EventEmitter<IDropResult>();\r\n\r\n  ngAfterViewInit() {\r\n    this.container = SmoothDnD(this.containerElementRef.nativeElement, this.getOptions());\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.container.dispose();\r\n  }\r\n\r\n  private getOptions() {\r\n    const options: IContainerOptions = {};\r\n    if (this.orientation) options.orientation = this.orientation;\r\n    \r\n    if (this.onDrop) options.onDrop = (removedIndex: number, addedIndex: number, payload?: any, element?: Element) => {\r\n      this.onDrop.emit({\r\n        removedIndex, addedIndex, payload, element\r\n      });\r\n    };\r\n  }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContainerComponent } from './container/container.component';\r\nimport { DraggableComponent } from './draggable/draggable.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ContainerComponent, DraggableComponent],\r\n  exports: [ContainerComponent, DraggableComponent]\r\n})\r\nexport class NgxSmoothDnDModule {}\r\n"
  ],
  "names": [
    "wrapperClass",
    "constants",
    "animationClass",
    "constantClasses",
    "_a",
    "DraggableComponent",
    "this",
    "classList",
    "Object",
    "assign",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "ContainerComponent",
    "onDrop",
    "EventEmitter",
    "prototype",
    "ngAfterViewInit",
    "container",
    "SmoothDnD",
    "containerElementRef",
    "nativeElement",
    "getOptions",
    "ngOnDestroy",
    "dispose",
    "_this",
    "options",
    "orientation",
    "removedIndex",
    "addedIndex",
    "payload",
    "element",
    "emit",
    "draggables",
    "ContentChildren",
    "ViewChild",
    "Input",
    "Output",
    "NgxSmoothDnDModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "yZAGEA,EAAFC,EAAAA,UAAAD,aACEE,EAAFD,EAAAA,UAAAC,eAGMC,IAANC,EAAA,IACGJ,IAAe,EAChBI,EAACF,IAAiB,EAFpBE,GAcAC,aACAC,KAAAC,UAAcC,OAAOC,OAAO,GAAIN,kBAVhC,CAAAO,KAACC,EAAAA,UAADC,KAAA,CAAW,CAETC,SAAU,2BACVC,SAAU,+GCWZ,IAAAC,EAAA,wBAMAT,KAAAU,OAAqB,IAAIC,EAAAA,oBAEvBF,EAAFG,UAAAC,gBAAE,WACEb,KAAKc,UAAYC,EAAUf,KAAKgB,oBAAoBC,cAAejB,KAAKkB,eAE1ET,EAAFG,UAAAO,YAAE,WACEnB,KAAKc,UAAUM,WAGTX,EAAVG,UAAAM,WAAU,WAAA,IAAVG,EAAArB,KACUsB,EAA6B,GAC/BtB,KAAKuB,cAAaD,EAAQC,YAAcvB,KAAKuB,aAE7CvB,KAAKU,SAAQY,EAAQZ,OAAS,SAACc,EAAsBC,EAAoBC,EAAeC,GAC1FN,EAAKX,OAAOkB,KAAK,CACfJ,aAARA,EAAsBC,WAAtBA,EAAkCC,QAAlCA,EAA2CC,QAA3CA,SArBA,iBAPA,CAAAvB,KAACC,EAAAA,UAADC,KAAA,CAAW,CAETC,SAAU,2BACVC,SAAU,0IAMZqB,WAAA,CAAA,CAAAzB,KAAG0B,EAAAA,gBAAHxB,KAAA,CAAmBP,KACnBiB,oBAAA,CAAA,CAAAZ,KAAG2B,EAAAA,UAAHzB,KAAA,CAAa,eAEbiB,YAAA,CAAA,CAAAnB,KAAG4B,EAAAA,MAAH1B,KAAA,CAAS,iBACTI,OAAA,CAAA,CAAAN,KAAG6B,EAAAA,UChCH,MAAAC,EAAA,2BAKA,CAAA9B,KAAC+B,EAAAA,SAAD7B,KAAA,CAAU,CACR8B,QAAS,CAACC,EAAAA,cACVC,aAAc,CAAC7B,EAAoBV,GACnCwC,QAAS,CAAC9B,EAAoBV"
}
